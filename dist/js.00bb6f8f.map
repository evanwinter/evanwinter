{"version":3,"sources":["js/index.js"],"names":["_","el","document","querySelector","$","Array","from","querySelectorAll","dark","light","darkblue","yellow","tan","ice","lightTan","red","pink","orange","green","papayawhip","THEMES","background","color","linkColor","ThemeManager","trigger","setTheme","bind","handleUpdate","addEventListener","removeEventListener","randInt","randomIntFromInterval","length","nextTheme","theme","body","paragraphs","links","style","forEach","link","paragraph","n","now","hours","Date","getHours","numThemes","min","max","Math","floor","random","showSplash","duration","hello","setTimeout","classList","add","remove","main","listen"],"mappings":"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","file":"js.00bb6f8f.map","sourceRoot":"../src","sourcesContent":["/*\n *\tMain app entry\n */\n\n// Import styles\nimport styles from \"../scss/styles.scss\"\n\nfunction _(el) {\n\treturn document.querySelector(el)\n}\nfunction $(el) {\n\treturn Array.from(document.querySelectorAll(el))\n}\n\nconst dark = \"#111\"\nconst light = \"#fefefe\"\nconst darkblue = \"#002573\"\nconst yellow = \"#f7d708\"\nconst tan = \"#FFDBB5\"\nconst ice = \"#F1FAEE\"\nconst lightTan = \"floralwhite\"\nconst red = \"#B80C09\"\nconst pink = \"#FF8484\"\nconst orange = \"orange\"\nconst green = \"#239a3b\"\nconst papayawhip = \"papayawhip\"\n\nconst THEMES = [\n\t{\n\t\tbackground: dark,\n\t\tcolor: light,\n\t\tlinkColor: light\n\t},\n\t{\n\t\tbackground: light,\n\t\tcolor: dark,\n\t\tlinkColor: dark\n\t},\n\t{\n\t\tbackground: darkblue,\n\t\tcolor: light,\n\t\tlinkColor: light\n\t},\n\t{\n\t\tbackground: green,\n\t\tcolor: light,\n\t\tlinkColor: light\n\t},\n\t{\n\t\tbackground: ice,\n\t\tcolor: dark,\n\t\tlinkColor: dark\n\t},\n\t{\n\t\tbackground: pink,\n\t\tcolor: light,\n\t\tlinkColor: light\n\t},\n\t{\n\t\tbackground: red,\n\t\tcolor: light,\n\t\tlinkColor: light\n\t},\n\t{\n\t\tbackground: tan,\n\t\tcolor: dark,\n\t\tlinkColor: dark\n\t},\n\t{\n\t\tbackground: yellow,\n\t\tcolor: dark,\n\t\tlinkColor: dark\n\t},\n\t{\n\t\tbackground: papayawhip,\n\t\tcolor: dark,\n\t\tlinkColor: dark\n\t},\n\t{\n\t\tbackground: orange,\n\t\tcolor: dark,\n\t\tlinkColor: dark\n\t}\n]\n\nclass ThemeManager {\n\tconstructor() {\n\t\tthis.trigger = document.querySelector(\"#secret-button\")\n\t\tthis.setTheme = this.setTheme.bind(this)\n\t\tthis.handleUpdate = this.handleUpdate.bind(this)\n\t}\n\n\tlisten() {\n\t\tthis.trigger.addEventListener(\"click\", this.handleUpdate)\n\t}\n\n\tunlisten() {\n\t\tthis.trigger.removeEventListener(\"click\", this.handleUpdate)\n\t}\n\n\thandleUpdate() {\n\t\t// get a random themes\n\t\tconst randInt = randomIntFromInterval(0, THEMES.length - 1)\n\t\tconst nextTheme = THEMES[randInt]\n\n\t\t// set next theme\n\t\tthis.setTheme(nextTheme)\n\t}\n\n\tsetTheme(theme) {\n\t\tconst { background, color, linkColor } = theme\n\n\t\t// get target elements\n\t\tconst body = _(\"body\")\n\t\tconst paragraphs = $(\"p\")\n\t\tconst links = $(\"a\")\n\n\t\t// apply styles\n\t\tbody.style.background = background\n\t\tbody.style.color = color\n\t\tlinks.forEach(link => (link.style.color = linkColor))\n\t\tparagraphs.forEach(paragraph => (paragraph.style.color = color))\n\t}\n\n\tsetInitialTheme() {\n\t\t// set initial theme based on time of day (sort of)\n\t\tconst now = new Date()\n\t\tconst hours = now.getHours()\n\t\tconst numThemes = THEMES.length\n\t\t// if hours is greater than number of themes, keep wrapping around the list\n\t\tlet n = hours\n\t\twhile (n >= numThemes) {\n\t\t\tn = n - numThemes\n\t\t}\n\n\t\t// this.setTheme(THEMES[n])\n\t\tthis.setTheme(THEMES[1])\n\t}\n}\n\nconst randomIntFromInterval = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min)\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tmain()\n})\n\nfunction showSplash(duration) {\n\tconst hello = document.querySelector(\"#hello\")\n\tsetTimeout(() => {\n\t\thello.classList.add(\"animate-in\")\n\t}, 0)\n\tsetTimeout(() => {\n\t\thello.classList.remove(\"animate-in\")\n\t}, duration / 2)\n}\n\nfunction main() {\n\t// listen for theme changes\n\tconst themeManager = new ThemeManager()\n\t// themeManager.setInitialTheme()\n\tthemeManager.listen()\n\n\tconst showSplashPage = false\n\tconst splashDuration = 3000\n\tif (showSplashPage)\n\t\tshowSplash(splashDuration)\n\t\n\tsetTimeout(() => {\n\t\tArray.from(document.querySelectorAll(\".animate\")).forEach(el =>\n\t\t\tel.classList.add(\"animate-in\")\n\t\t)\n\t}, showSplashPage ? splashDuration : 1000)\n}\n"]}