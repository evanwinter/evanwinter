/*!
 *  v1.0.0 (https://github.com/evanwinter/evanwinter.github.io#readme)
 * Evan Winter
 * Licensed under MIT
 */
var x=null,y=null,z=null,n=null;function drawHover(t){var o=document.getElementById(t.target.id),e=o.getContext("2d"),n=o.getBoundingClientRect();null==x&&(x=Math.round((t.clientX-n.left)/(n.right-n.left)*o.width),y=Math.round((t.clientY-n.top)/(n.bottom-n.top)*o.height)),e.beginPath(),e.moveTo(x,y),e.lineTo(Math.round((t.clientX-n.left)/(n.right-n.left)*o.width),Math.round((t.clientY-n.top)/(n.bottom-n.top)*o.height)),e.strokeStyle="white",e.stroke(),x=Math.round((t.clientX-n.left)/(n.right-n.left)*o.width),y=Math.round((t.clientY-n.top)/(n.bottom-n.top)*o.height)}function drawClick(t){var o=document.getElementById(t.target.id),e=o.getContext("2d"),l=o.getBoundingClientRect();null==z&&(z=Math.round((t.clientX-l.left)/(l.right-l.left)*o.width),n=Math.round((t.clientY-l.top)/(l.bottom-l.top)*o.height)),e.beginPath(),e.moveTo(z,n),e.lineTo(Math.round((t.clientX-l.left)/(l.right-l.left)*o.width),Math.round((t.clientY-l.top)/(l.bottom-l.top)*o.height)),e.strokeStyle="blue",e.stroke(),z=Math.round((t.clientX-l.left)/(l.right-l.left)*o.width),n=Math.round((t.clientY-l.top)/(l.bottom-l.top)*o.height)}function scrollFunction(){var t=document.getElementById("back-to-top");document.body.scrollTop>200||document.documentElement.scrollTop>200?t.style.display="flex":t.style.display="none"}$("#back-to-top").click(function(){$("html, body").animate({scrollTop:0},"slow")}),window.onscroll=function(){scrollFunction()},$(".js-target").click(function(t){var o=this.className.split(" ")[1];o="."+o+"-section",$("html, body").animate({scrollTop:$(o).offset().top-32},"slow")});