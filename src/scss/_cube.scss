@keyframes cube-spin{
	0% {
		transform: rotateY(0);
	}
	100% {
		transform: rotateY(360deg);
	}
}

$cube-colors: red, orange, yellow, green, blue, white;

$cube-size: 32px;
$cube-square-border-radius: 3px;
$cube-square-border: 1px solid #222;
$cube-square-box-shadow: inset 0 0 1px 1px rgba($dark, 0.25);

$cube-square-border-radius-sm: 2px;
$cube-square-border-sm: 1px solid #222;
$cube-square-box-shadow-sm: inset 0 0 0px 0px rgba($dark, 1);

.cube-wrapper {
	display: block;
	width: $cube-size * 2;
	height: $cube-size * 2;
	perspective: $cube-size * 10;
	perspective-origin: 50% $cube-size * -3;
}

.cube {
	padding-top: $cube-size / 2;
	position: relative;
	width: $cube-size;
	cursor: pointer;
	transform-style: preserve-3d;
	animation: cube-spin 5s infinite linear;
}

.cube.colors {
	.side {
		background: #000;
		&.back {
			transform: translateZ(($cube-size / 2) * -1) rotateY(180deg);
			.square {
				@for $i from 1 through 9 {
					&:nth-child(#{$i}) {
						background: nth($cube-colors, random(length($cube-colors)));
					}
				}
			}
		}
		&.right {
			transform: rotateY(-270deg) translateX($cube-size / 2);
			transform-origin: top right;
			.square {
				@for $i from 1 through 9 {
					&:nth-child(#{$i}) {
						background: nth($cube-colors, random(length($cube-colors)));
					}
				}
			}
		}
		&.left {
			transform: rotateY(270deg) translateX(($cube-size / 2) * -1);
			transform-origin: center left;
			.square {
				@for $i from 1 through 9 {
					&:nth-child(#{$i}) {
						background: nth($cube-colors, random(length($cube-colors)));
					}
				}
			}
		}
		&.top {
			transform: rotateX(-90deg) translateY(($cube-size / 2) * -1);
			transform-origin: top center;
			.square {
				@for $i from 1 through 9 {
					&:nth-child(#{$i}) {
						background: nth($cube-colors, random(length($cube-colors)));
					}
				}
			}
		}
		&.bottom {
			transform: rotateX(90deg) translateY($cube-size / 2);
			transform-origin: bottom center;
			.square {
				@for $i from 1 through 9 {
					&:nth-child(#{$i}) {
						background: nth($cube-colors, random(length($cube-colors)));
					}
				}
			}
		}
		&.front {
			transform: translateZ($cube-size / 2);
			.square {
				@for $i from 1 through 9 {
					&:nth-child(#{$i}) {
						background: nth($cube-colors, random(length($cube-colors)));
					}
				}
			}
		}
	}
}

.side {
	position: absolute;
	width: $cube-size;
	height: $cube-size;
	background: none;

	@include transition(background 500ms ease);

	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-template-rows: 1fr 1fr 1fr;

	$s-min: 20;
	$s-max: 70;
	$l-min: 30;
	$l-max: 90;

	.square {
		@include transition(background 500ms ease);
	}

	&.back {
		transform: translateZ(($cube-size / 2) * -1) rotateY(180deg);
		.square {
			background: transparent;
		}
	}
	&.right {
		transform: rotateY(-270deg) translateX($cube-size / 2);
		transform-origin: top right;
		.square {
			background: transparent;
		}
	}
	&.left {
		transform: rotateY(270deg) translateX(($cube-size / 2) * -1);
		transform-origin: center left;
		.square {
			background: transparent;
		}
	}
	&.top {
		transform: rotateX(-90deg) translateY(($cube-size / 2) * -1);
		transform-origin: top center;
		.square {
			background: transparent;
		}
	}
	&.bottom {
		transform: rotateX(90deg) translateY($cube-size / 2);
		transform-origin: bottom center;
		.square {
			background: transparent;
		}
	}
	&.front {
		transform: translateZ($cube-size / 2);
		.square {
			background: transparent;
		}
	}
}

.square {
	border: $cube-square-border-sm;
	border-radius: $cube-square-border-radius-sm;
	// subtle shadow around the edge of each square -- trying to make it look a little 3d
	box-shadow: $cube-square-box-shadow-sm;
}



// .square:nth-child(1) {
//    background: red !important;
// }
// .square:nth-child(2){
//    background: orange !important;
// }
// .square:nth-child(3){
//    background: yellow !important;
// }
// .square:nth-child(4){
//    background: green !important;
// }
// .square:nth-child(5){
//    background: blue !important;
// }
// .square:nth-child(6){
//    background: white !important;
// }
// .square:nth-child(7){
//    background: red !important;
// }
// .square:nth-child(8){
//    background: green !important;
// }
// .square:nth-child(9){
//    background: white !important;
// }